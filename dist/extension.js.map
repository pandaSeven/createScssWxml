{"version":3,"file":"extension.js","mappings":"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,OAAO,IAEtD,MAAMiF,EAAS,4DACTC,EAAkB,4BAGlBC,EAAmB,CACvB,UACA,IACA,OACA,UACA,UACA,SACA,UACA,QACA,QACA,IACA,WACA,MACA,MACA,MACA,aACA,SACA,SACA,UACA,SACA,OACA,OACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,IACA,SACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,OACA,QACA,MACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,QACA,OACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,KACA,IACA,KACA,MACA,QACA,QAGIC,EAAkB,CAAC,OAAQ,OAAQ,KAAM,MAAO,QAAS,KAAM,MAAO,QAAS,SAAU,OAAQ,WAAY,OAAQ,QAAS,SAAU,QAAS,MAAO,SAoG9J,MAAMC,EAAmB,CACvB,CAAEC,KAAM,QAASC,IAAK,KACtB,CAAED,KAAM,KAAMC,IAAK,MAkCrB,SAASC,EAAiBC,GACxB,IAAKA,GAA0B,QAAhBA,EAAOC,KAAgB,OAAO,KAG7C,IAAKD,EAAOH,KAAKpB,MAAM,YAAciB,EAAiBQ,OAAOP,GAAiBQ,SAASH,EAAOH,SAAWG,EAAOI,MAAMC,QAAUL,EAAOI,MAAME,GAC3I,OAAKN,EAAOf,SAASsB,OACdP,EAAOf,SACXuB,KAAKC,GAAYV,EAAiBU,KAClCC,QAAO,CAACC,EAAGC,IACHA,EAAID,EAAET,OAAOU,GAAKD,GACxB,IAL+B,KAOtC,MAAME,EAxCR,SAA0Bb,GACxB,MAAMa,EAAa,CACjBC,cAAe,GACf7B,SAAU,IASZ,GAPAW,EAAiBmB,SAASC,IACvB,CAAC,QAAqB,aAA6BD,SAASE,IACvDjB,EAAOiB,GAAUD,EAAKnB,QACxBgB,EAA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","sources":[".././out/extension.js",".././out/index.js",".././out/parseTemplate.js",".././out/scssManage.js",".././out/util.js",".././out/vars.js","../external commonjs \"vscode\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["'use strict'\r\nvar __awaiter =\r\n  (this && this.__awaiter) ||\r\n  function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) {\r\n      return value instanceof P\r\n        ? value\r\n        : new P(function (resolve) {\r\n            resolve(value)\r\n          })\r\n    }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n      function fulfilled(value) {\r\n        try {\r\n          step(generator.next(value))\r\n        } catch (e) {\r\n          reject(e)\r\n        }\r\n      }\r\n      function rejected(value) {\r\n        try {\r\n          step(generator['throw'](value))\r\n        } catch (e) {\r\n          reject(e)\r\n        }\r\n      }\r\n      function step(result) {\r\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected)\r\n      }\r\n      step((generator = generator.apply(thisArg, _arguments || [])).next())\r\n    })\r\n  }\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\nconst vscode = require('vscode')\r\nconst util_1 = require('./util')\r\nconst vars_1 = require('./vars')\r\nfunction activate(context) {\r\n  console.log('扩展激活')\r\n  // 更新配置项变量\r\n  util_1.updateConfig()\r\n  let listener = null\r\n  // 监控配置项 change\r\n  vscode.workspace.onDidChangeConfiguration(() => {\r\n    // 更新配置项变量\r\n    util_1.updateConfig()\r\n    if (vars_1.default.config.createScssWxmlConf.excuteMode === 'onCommand') {\r\n      // 从 onSave&onCommand 变成 onCommand\r\n      if (!listener) return\r\n      listener.dispose()\r\n    } else {\r\n      // 从 onCommand 变成 onSave&onCommand\r\n      listener = util_1.excuteWhenSave()\r\n    }\r\n  })\r\n  if (vars_1.default.config.createScssWxmlConf.excuteMode === 'onSave&onCommand') {\r\n    // 当文件保存时执行\r\n    listener = util_1.excuteWhenSave()\r\n  }\r\n  // 当使用 createScssWxml 命令时执行\r\n  context.subscriptions.push(\r\n    vscode.commands.registerTextEditorCommand('extension.createScssWxml', (textEditor) =>\r\n      __awaiter(this, void 0, void 0, function* () {\r\n        console.log('createScssWxml 执行命令启动')\r\n        if (!textEditor) return console.log('no textEditor')\r\n        const activeDocument = textEditor.document\r\n        // 当前文件未保存，则尝试保存\r\n        if (activeDocument.isDirty) {\r\n          let saveRst = false\r\n          try {\r\n            saveRst = yield extension.createScssWxml.save()\r\n          } catch (e) {\r\n            console.log('save error:', e)\r\n          }\r\n          if (!saveRst) {\r\n            return vscode.window.showInformationMessage('请先保存当前文件')\r\n          }\r\n        }\r\n        if (activeDocument.languageId !== 'wxml') {\r\n          return vscode.window.showInformationMessage('当前不是wxml文件')\r\n        }\r\n        const fileStr = util_1.generateProcess(activeDocument)\r\n        util_1.updateScssFile(activeDocument.uri.fsPath, fileStr, () => {\r\n          textEditor.edit((editorBuilder) => {\r\n            editorBuilder.replace(new vscode.Range(new vscode.Position(0, 0), new vscode.Position(activeDocument.lineCount + 1, 0)), fileStr)\r\n            setTimeout(() => {\r\n              activeDocument.save().then((rst) => {\r\n                console.log('保存结果：', rst)\r\n              })\r\n            }, 0)\r\n          })\r\n        })\r\n      })\r\n    )\r\n  )\r\n}\r\nexports.activate = activate\r\n// this method is called when your extension is deactivated\r\nfunction deactivate() {\r\n  console.log('扩展释放')\r\n}\r\nexports.deactivate = deactivate\r\n//# sourceMappingURL=extension.js.map\r\n","'use strict'\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\nconst parseTemplate_1 = require('./parseTemplate')\r\nconst scssManage_1 = require('./scssManage')\r\n// 在 scss文本外再包裹一层，避免遗漏变量等内容\r\nconst scssWrapper = 'wrapper {'\r\nexports.default = (wxmlStr, scssStr) => {\r\n  let originscssStr = ''\r\n  let originscssMt = null\r\n  let originTemplateStr = ''\r\n  const originTemplateMt = wxmlStr.match(/<view[^>]*>([\\s\\S]*)<\\/view>/)\r\n  if (originTemplateMt) {\r\n    originTemplateStr = originTemplateMt[1].trim()\r\n  }\r\n  console.log(originTemplateMt, originTemplateStr)\r\n  if (typeof scssStr === 'string') {\r\n    originscssStr = scssStr\r\n  } else {\r\n    originscssMt = wxmlStr.match(/<style[^>]*>([\\s\\S]*)<\\/style>/)\r\n    if (originscssMt) {\r\n      originscssStr = originscssMt[1].trim()\r\n    }\r\n  }\r\n  // 解析 template文本得到 templateAst对象\r\n  const templateObj = parseTemplate_1.default('<wrapper>' + originTemplateStr + '</wrapper>')\r\n  // 解析 scss文本得到 scssAst对象\r\n  const scssObj = scssManage_1.scssStr2Ast(scssWrapper + originscssStr + '}')\r\n  // 根据 templateAst 重置 scssAst（只增不删）\r\n  scssManage_1.resetScss(templateObj, scssObj)\r\n  // 将更新后的 scssAst转换为 scss文本\r\n  const newscssStr = scssManage_1.scssAstObj2Str(scssObj.children[0]).trim().slice(scssWrapper.length, -1).trimLeft()\r\n  // 将 scss文本写入本地文件\r\n  let newwxmlFile = ''\r\n  if (typeof scssStr === 'string') {\r\n    newwxmlFile = newscssStr\r\n  } else {\r\n    if (originscssMt) {\r\n      const scssMt = wxmlStr.match(/([\\s\\S]*)(<style[^>]*>)([\\s\\S]*)(<\\/style>\\s*)/)\r\n      if (scssMt) {\r\n        newwxmlFile = scssMt[1] + scssMt[2] + '\\n' + newscssStr.trimRight() + '\\n' + scssMt[4]\r\n      }\r\n    } else {\r\n      newwxmlFile = wxmlStr + `\\n<style lang=\"scss\" scoped>${'\\n' + newscssStr.trimRight() + '\\n'}</style>\\n`\r\n    }\r\n  }\r\n  return newwxmlFile\r\n}\r\n//# sourceMappingURL=index.js.map\r\n","'use strict'\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\n// 匹配属性标签\r\nconst attrRE = /((:|v-bind:)?[\\w$\\-]+)|(?<word>[\"'\"]){1}[\\s\\S]*?\\k<word>/g\r\nconst bindAttrValueRE = /(?<=('|\"))[\\w\\-$]+(?=\\1)/g\r\n// html非自闭合标签\r\n// wrapper 是额外添加的用于辅助构建 scss AST 的标签\r\nconst htmlBlockTagList = [\r\n  'wrapper',\r\n  'a',\r\n  'abbr',\r\n  'acronym',\r\n  'address',\r\n  'applet',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'basefont',\r\n  'bdi',\r\n  'bdo',\r\n  'big',\r\n  'blockquote',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'center',\r\n  'cite',\r\n  'code',\r\n  'colgroup',\r\n  'command',\r\n  'datalist',\r\n  'dd',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'dialog',\r\n  'dir',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'em',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'font',\r\n  'footer',\r\n  'form',\r\n  'frame',\r\n  'frameset',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'head',\r\n  'header',\r\n  'i',\r\n  'iframe',\r\n  'ins',\r\n  'kbd',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'main',\r\n  'map',\r\n  'mark',\r\n  'menu',\r\n  'meter',\r\n  'nav',\r\n  'noframes',\r\n  'noscript',\r\n  'object',\r\n  'ol',\r\n  'optgroup',\r\n  'option',\r\n  'output',\r\n  'p',\r\n  'pre',\r\n  'progress',\r\n  'q',\r\n  'rp',\r\n  'rt',\r\n  'ruby',\r\n  's',\r\n  'samp',\r\n  'section',\r\n  'select',\r\n  'small',\r\n  'span',\r\n  'strike',\r\n  'strong',\r\n  'sub',\r\n  'summary',\r\n  'sup',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'title',\r\n  'tr',\r\n  'tt',\r\n  'u',\r\n  'ul',\r\n  'var',\r\n  'video',\r\n  'view'\r\n]\r\n// htmk自闭合标签\r\nconst voidElementList = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr', 'image']\r\n/**\r\n * 解析标签tag\r\n * @param tag 标签信息，例如 <div class=\"class1\"></div>\r\n */\r\nfunction parseTag(tag) {\r\n  let i = 0\r\n  let key\r\n  let attrType = 'attrs' /* attrs */\r\n  const res = {\r\n    type: 'tag',\r\n    name: '',\r\n    voidElement: false,\r\n    ['attrs' /* attrs */]: {},\r\n    ['bindAttrs' /* bindAttrs */]: {},\r\n    children: []\r\n  }\r\n  // 匹配普通选择器\r\n  tag.replace(attrRE, (match) => {\r\n    if (i % 2) {\r\n      key = match\r\n      // 是否是 wxml bind属性\r\n      if (match.indexOf(':') === 0 || match.indexOf('v-bind:') === 0) {\r\n        key = match.replace(/(:|v-bind:)/, '')\r\n        attrType = 'bindAttrs' /* bindAttrs */\r\n      } else {\r\n        attrType = 'attrs' /* attrs */\r\n      }\r\n    } else {\r\n      if (i === 0) {\r\n        if (voidElementList.includes(match) || tag.charAt(tag.length - 2) === '/') {\r\n          res.voidElement = true\r\n        }\r\n        res.name = match\r\n      } else {\r\n        // 去掉属性值两侧的引号字符串\r\n        res[attrType][key] = match.replace(/^\\s*[\"']|[\"']\\s*$/g, '')\r\n      }\r\n    }\r\n    i++\r\n    return ''\r\n  })\r\n  return res\r\n}\r\n/**\r\n * 解析template\r\n * @param html html字符串片段\r\n */\r\nfunction parse(html) {\r\n  if (!html) {\r\n    return []\r\n  }\r\n  const tagRE = /<!--[\\s\\S]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g\r\n  let result = []\r\n  let current = null\r\n  let level = -1\r\n  let arr = []\r\n  let byTag = {}\r\n  html.replace(tagRE, (tag) => {\r\n    // 注释标签，跳过不处理\r\n    if (tag.indexOf('<!--') !== -1) return ''\r\n    const isOpen = tag.charAt(1) !== '/'\r\n    let parent\r\n    if (isOpen) {\r\n      level++\r\n      current = parseTag(tag)\r\n      byTag[current.tagName] = current\r\n      if (level === 0) {\r\n        result.push(current)\r\n      }\r\n      parent = arr[level - 1]\r\n      if (parent) {\r\n        parent.children.push(current)\r\n      }\r\n      arr[level] = current\r\n    }\r\n    if (!isOpen || current.voidElement) {\r\n      level--\r\n    }\r\n    return ''\r\n  })\r\n  console.log('result:', result)\r\n  return result\r\n}\r\n/**\r\n * 分离同一个标签的多个选择器\r\n * @param seletorStr 选择器集合字符串，例如 \"['class1', 'class2]\"\r\n * @param symbol 选择器标识，例如 class的 .  id的 #\r\n * @param bindAttr 是否是 wxml的绑定元素（v-bind）\r\n */\r\nfunction splitSeletor(seletorStr, symbol, isBind) {\r\n  const arr = []\r\n  let mt = isBind ? seletorStr.match(bindAttrValueRE) : seletorStr.split(/\\s+/).filter((item) => item)\r\n  if (mt) {\r\n    mt.forEach((item) => {\r\n      arr.push(symbol + item)\r\n    })\r\n  }\r\n  return arr\r\n}\r\nconst selectorTypeInfo = [\r\n  { name: 'class', tag: '.' },\r\n  { name: 'id', tag: '#' }\r\n]\r\n/**\r\n * 获取当前 templateAst上的选择器\r\n * @param astObj 模板 templateAst\r\n */\r\nfunction getSelectorNames(astObj) {\r\n  const currentObj = {\r\n    selectorNames: [],\r\n    children: []\r\n  }\r\n  selectorTypeInfo.forEach((item) => {\r\n    ;['attrs' /* attrs */, 'bindAttrs' /* bindAttrs */].forEach((attrName) => {\r\n      if (astObj[attrName][item.name]) {\r\n        currentObj.selectorNames = currentObj.selectorNames.concat(splitSeletor(astObj[attrName][item.name], item.tag, attrName === 'bindAttrs' /* bindAttrs */))\r\n      }\r\n    })\r\n  })\r\n  if (currentObj.selectorNames.length === 0) {\r\n    if (astObj.voidElement) {\r\n      if (!voidElementList.includes(astObj.name)) {\r\n        // 是组件标签，并且自闭合（无子元素）\r\n        return null\r\n      }\r\n    }\r\n    // 将标签名作为选择器\r\n    currentObj.selectorNames.push(astObj.name)\r\n  }\r\n  return currentObj\r\n}\r\n/**\r\n * 将解析后的 ast 转换为所需的结构\r\n * @param astObj 模板 templateAst\r\n */\r\nfunction transTemplateAst(astObj) {\r\n  if (!astObj || astObj.type !== 'tag') return null\r\n  // 如果标签名开头字母大写，或者不是合法的 html标签，则都默认是组件标签（包括内置组件），\r\n  // 并且，组件不存在 class 或 id 属性，则将组件的 children 当做是内置组件父标签的 children\r\n  if ((astObj.name.match(/^[A-Z]/) || !htmlBlockTagList.concat(voidElementList).includes(astObj.name)) && !astObj.attrs.class && !astObj.attrs.id) {\r\n    if (!astObj.children.length) return null\r\n    return astObj.children\r\n      .map((cAstObj) => transTemplateAst(cAstObj))\r\n      .reduce((t, c) => {\r\n        return c ? t.concat(c) : t\r\n      }, [])\r\n  }\r\n  const currentObj = getSelectorNames(astObj)\r\n  if (astObj.children) {\r\n    for (let i = 0; i < astObj.children.length; i++) {\r\n      let childNode = transTemplateAst(astObj.children[i])\r\n      if (childNode) {\r\n        currentObj.children = currentObj.children.concat(childNode)\r\n      }\r\n    }\r\n  }\r\n  return currentObj\r\n}\r\nexports.default = (templateStr) => {\r\n  return transTemplateAst(parse(templateStr)[0])\r\n}\r\n//# sourceMappingURL=parseTemplate.js.map\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vars_1 = require(\"./vars\");\r\n/**\r\n * 换行 + 缩进\r\n * @param n 缩进的 tab 数\r\n */\r\nfunction rnIndent(n) {\r\n    return n <= 0 ? '\\n' : ('\\n' + (' '.repeat(vars_1.default.config.indenConf.tabSize)).repeat(n));\r\n}\r\n/**\r\n * 补全以 & 开头的选择器名\r\n * @param scssObj scssObj\r\n * @param name 选择器名\r\n */\r\nfunction completeSelectorName(scssObj, name = '') {\r\n    if (scssObj.selectorNames.startsWith('&')) {\r\n        return scssObj.parent\r\n            ? completeSelectorName(scssObj.parent, scssObj.selectorNames + name.replace('&', ''))\r\n            : (scssObj.selectorNames + name);\r\n    }\r\n    return scssObj.selectorNames + name.replace('&', '');\r\n}\r\n/**\r\n * 对比新旧 scssAst结构时，对新增的 template 标签进行递归遍历所有子元素\r\n * @param obj 新增的 templateAst\r\n * @param destArr 用于递归的节点，初始调用无需传此值\r\n */\r\nfunction trackChildren(obj, destArr = []) {\r\n    for (let i = 0; i < obj.children.length; i++) {\r\n        obj.children[i].selectorNames.forEach((item, index) => {\r\n            destArr.push({\r\n                rule: '',\r\n                selectorNames: item,\r\n                children: index === 0 ? trackChildren(obj.children[i]) : [],\r\n                rnInfo: {},\r\n                isNew: true\r\n            });\r\n        });\r\n    }\r\n    return destArr;\r\n}\r\nconst rootStrObj = JSON.stringify({\r\n    selectorNames: '',\r\n    children: [],\r\n    rule: '',\r\n    rnInfo: {}\r\n});\r\n// 匹配 }\r\nconst leftRe = '^\\\\s*}';\r\n// 匹配 rule\r\nconst ruleRe1 = '([^{}]|#{[^}]*})+;(?=[^{:]+?{)';\r\n// 匹配 rule\r\nconst ruleRe2 = '([^{}]|#{[^}]*})+?(?=\\\\s*})';\r\n// 匹配 {\r\nconst rightRe = '([^{]|(?<=#){)*{';\r\n// /^\\s*}|([^{}]|#{[^}]*})+;(?=[^{:]+?{)|([^{}]|#{[^}]*})+?(?=\\s*})|([^{]|(?<=#){)*{/\r\nconst re1 = new RegExp(`${leftRe}|${ruleRe1}|${ruleRe2}|${rightRe}`);\r\n// 匹配 scss 注释\r\nconst scssCommentRe = /^\\s*\\/\\/[\\s\\S]*(?=\\n)|^\\s*\\/\\*[\\s\\S]*?\\*\\//;\r\nlet mt = null;\r\n/**\r\n * 将 str文本转换为 scss ast\r\n * @param {*} scssStr scss字符串\r\n * @param {*} root 用于递归的节点，初始调用无需传此值\r\n */\r\nconst scssStr2Ast = (scssStr, root = JSON.parse(rootStrObj)) => {\r\n    // scssStr = scssStr.trim()\r\n    if (!scssStr.trim())\r\n        return root;\r\n    mt = scssStr.match(re1);\r\n    if (!mt) {\r\n        console.log('no mt');\r\n        return null;\r\n    }\r\n    // const value = mt[0].trim()\r\n    let value = mt[0];\r\n    // 包含 {，并且不是 scss 插值语句\r\n    if (/[^#]{/.test(value)) {\r\n        scssStr = scssStr.slice(value.length);\r\n        const child = {\r\n            selectorNames: '',\r\n            children: [],\r\n            rule: '',\r\n            parent: root,\r\n            // 选择器名以  @ 开头的，认为是关键字规则\r\n            isKeyRule: value.trim().indexOf('@') === 0,\r\n            rnInfo: {\r\n                start: '',\r\n                end: ''\r\n            }\r\n        };\r\n        // 检查是否有注释\r\n        const commentMt = value.match(scssCommentRe);\r\n        if (commentMt) {\r\n            child.comment = commentMt[0];\r\n            value = value.slice(child.comment.length);\r\n        }\r\n        const selectorMt = value.match(/(\\s*)([\\s\\S]*\\S)(\\s*){$/);\r\n        child.selectorNames = selectorMt[2];\r\n        child.rnInfo.start = selectorMt[1];\r\n        child.rnInfo.startAfter = selectorMt[3];\r\n        root.children.push(child);\r\n        return scssStr2Ast(scssStr, child);\r\n    }\r\n    else if (/^\\s*}$/.test(value)) {\r\n        // 匹配 }\r\n        root.rnInfo.end = value.match(/^\\s*/)[0];\r\n        scssStr = scssStr.slice(value.length);\r\n        return scssStr2Ast(scssStr, root.parent);\r\n    }\r\n    else {\r\n        // 匹配 css规则\r\n        root.rule = (root.rule || '') + scssStr.slice(0, value.length);\r\n        scssStr = scssStr.slice(value.length);\r\n        return scssStr2Ast(scssStr, root);\r\n    }\r\n};\r\nexports.scssStr2Ast = scssStr2Ast;\r\n/**\r\n * 子元素去重，当子元素中存在多个选择器相同并且都无子元素的项，则只保留第一个\r\n * @param {*} childrenArr 子元素集合\r\n */\r\nconst distinctChildren = (childrenArr) => {\r\n    const obj = {};\r\n    const distinctArr = [];\r\n    let len = childrenArr.length;\r\n    for (let i = 0; i < len; i++) {\r\n        if (!obj[childrenArr[i].selectorNames]) {\r\n            if (childrenArr[i].children.length === 0) {\r\n                obj[childrenArr[i].selectorNames] = true;\r\n            }\r\n            distinctArr.push(childrenArr[i]);\r\n        }\r\n        else {\r\n            if (childrenArr[i].children.length !== 0) {\r\n                distinctArr.push(childrenArr[i]);\r\n            }\r\n        }\r\n    }\r\n    return distinctArr;\r\n};\r\n/**\r\n * 将 scss ast转换为 str文本\r\n * @param {*} obj scssAst\r\n * @param {*} n 用于给转换后的 scss字符串进行格式化\r\n */\r\nconst scssAstObj2Str = (obj, n = -1) => {\r\n    if (!obj)\r\n        return '';\r\n    let scssStr = (obj.comment || '') +\r\n        (obj.isNew ? rnIndent(n) : (obj.rnInfo.start || '')) +\r\n        obj.selectorNames + (obj.isNew ? ' ' : obj.rnInfo.startAfter) + '{';\r\n    if (obj.rule) {\r\n        scssStr += (obj.rule || '');\r\n    }\r\n    if (obj.children.length) {\r\n        const distinctArr = distinctChildren(obj.children);\r\n        distinctArr.forEach(childScssObj => {\r\n            scssStr += scssAstObj2Str(childScssObj, n + 1);\r\n        });\r\n    }\r\n    scssStr += ((obj.isNew ? rnIndent(n) : (obj.rnInfo.end || '')) + '}');\r\n    return scssStr;\r\n};\r\nexports.scssAstObj2Str = scssAstObj2Str;\r\n/**\r\n * 根据当前的 template 结构重新整理 scss的结构\r\n * @param {*} templateObj template 结构\r\n * @param {*} scssObj scss 结构\r\n * @param {*} childIndex 当前比对的 templateObj是父元素的第几个子元素（从 0 开始）\r\n */\r\nconst resetScss = (templateObj, scssObj, childIndex = 0) => {\r\n    if (!templateObj)\r\n        return;\r\n    const selectorNames = templateObj.selectorNames;\r\n    for (let i = 0; i < selectorNames.length; i++) {\r\n        const selector = selectorNames[i];\r\n        const matchIndex = scssObj.children\r\n            .findIndex(v => !v.hasMatch && (selector === v.selectorNames || (v.selectorNames.startsWith('&') && (selector === completeSelectorName(v)))));\r\n        if (matchIndex === -1) {\r\n            // 没找到，说明 template 中新增了标签\r\n            scssObj.children = scssObj.children.slice(0, childIndex + i).concat({\r\n                rule: '',\r\n                selectorNames: selector,\r\n                children: i == 0 ? trackChildren(templateObj) : [],\r\n                rnInfo: {},\r\n                hasMatch: true,\r\n                isNew: true\r\n            }, scssObj.children.slice(childIndex + i));\r\n        }\r\n        else {\r\n            // 拥有多个选择器（class、id）的标签，只递归处理第一个选择器\r\n            if (i > 0)\r\n                continue;\r\n            // 尽可能将 template 与 scss 中相同位置的元素进行对应\r\n            scssObj.children[matchIndex].hasMatch = true;\r\n            let scssObjChild = null;\r\n            templateObj.children.forEach((obj, index) => {\r\n                scssObjChild = scssObj.children[matchIndex];\r\n                if (!scssObjChild.isKeyRule) {\r\n                    resetScss(obj, scssObjChild, templateObj.children.slice(0, index).reduce((t, c) => t + c.selectorNames.length, 0));\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\nexports.resetScss = resetScss;\r\n//# sourceMappingURL=scssManage.js.map","'use strict'\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\nconst vscode = require('vscode')\r\nconst index_1 = require('./index')\r\nconst vars_1 = require('./vars')\r\nconst fs_1 = require('fs')\r\nconst path_1 = require('path')\r\n/**\r\n * 当文件保存时执行扩展\r\n */\r\nfunction excuteWhenSave() {\r\n  return vscode.workspace.onWillSaveTextDocument((event) => {\r\n    const editor = vscode.window.activeTextEditor\r\n    if (!editor) return\r\n    const activeDocument = editor.document\r\n    // 只处理处于未保存状态的文件\r\n    if (!activeDocument.isDirty) return console.log('not dirty')\r\n    const fileStr = generateProcess(activeDocument)\r\n    updateScssFile(activeDocument.uri.fsPath, fileStr, () => {\r\n      event.waitUntil(\r\n        new Promise((resolve) => {\r\n          editor.edit((editorBuilder) => {\r\n            editorBuilder.replace(new vscode.Range(new vscode.Position(0, 0), new vscode.Position(activeDocument.lineCount + 1, 0)), fileStr)\r\n            resolve()\r\n          })\r\n        })\r\n      )\r\n    })\r\n  })\r\n}\r\nexports.excuteWhenSave = excuteWhenSave\r\n/**\r\n * 读取 .scss文件\r\n * @param currentDocumentFilePath 当前 wxml文件的绝对路径，用于根据此来寻找 .scss文件\r\n */\r\nfunction readScssFile(currentDocumentFilePath) {\r\n  let str = ''\r\n  try {\r\n    str = fs_1.readFileSync(path_1.resolve(currentDocumentFilePath, vars_1.default.config.createScssWxmlConf.scssFilePath)).toString()\r\n  } catch (e) {\r\n    console.log('readScssFile Error:', e.toString())\r\n  }\r\n  return str\r\n}\r\nexports.readScssFile = readScssFile\r\n/**\r\n * 更新 scss，如果是单独的 .scss文件，则更新此文件，否则更新 style标签的内容\r\n * @param currentDocumentFilePath 当前 wxml 文件的绝对路径，用于根据此来寻找 .scss文件\r\n * @param scssStr 更新后的 scss 字符串\r\n * @param noscssFilePathFn 当不指定 .scss文件路径（即使用了 style 标签）时，执行的方法\r\n */\r\nfunction updateScssFile(currentDocumentFilePath, scssStr, noscssFilePathFn) {\r\n  console.log('更新scss', currentDocumentFilePath, scssStr, noscssFilePathFn)\r\n  if (!scssStr) return console.log('empty scssStr')\r\n  if (!vars_1.default.config.createScssWxmlConf.scssFilePath) return noscssFilePathFn()\r\n  fs_1.writeFile(path_1.resolve(currentDocumentFilePath, vars_1.default.config.createScssWxmlConf.scssFilePath), scssStr, (err) => {\r\n    if (err) {\r\n      return vscode.window.showInformationMessage('写入scss错误：' + err.toString())\r\n    }\r\n    console.log('写入 scss文件成功', path_1.resolve(currentDocumentFilePath, vars_1.default.config.createScssWxmlConf.scssFilePath))\r\n  })\r\n}\r\nexports.updateScssFile = updateScssFile\r\n/**\r\n * 编译 scss\r\n * @param activeDocument 当前 wxml 文件的绝对路径，用于根据此来寻找 .scss文件\r\n */\r\nfunction generateProcess(activeDocument) {\r\n  // 如果不是 wxml文件，则忽略\r\n  if (activeDocument.languageId !== 'wxml') {\r\n    console.log('not wxml', activeDocument.languageId)\r\n    return ''\r\n  }\r\n  const activeText = activeDocument.getText()\r\n  // 页面上不存在内容，或者不存在模板内容，则不处理\r\n  if (!activeText || !/<view[\\s\\S]*<\\/view>/.test(activeText)) {\r\n    console.log('no activeText or no view', activeText.length)\r\n    return ''\r\n  }\r\n  let fileStr = ''\r\n  try {\r\n    fileStr = index_1.default(activeText, vars_1.default.config.createScssWxmlConf.scssFilePath ? readScssFile(activeDocument.uri.fsPath) : void 0)\r\n  } catch (e) {\r\n    console.log('getScssFile Error:', e)\r\n  }\r\n  return fileStr\r\n}\r\nexports.generateProcess = generateProcess\r\n/**\r\n * 读取 createScssWxml扩展的配置项\r\n */\r\nfunction updateConfig() {\r\n  const config = vscode.workspace.getConfiguration()\r\n  console.log('config update:', vars_1.default.config.createScssWxmlConf)\r\n  vars_1.default.config.createScssWxmlConf = config.createScssWxml\r\n  if (typeof config.editor.tabSize === 'number') {\r\n    vars_1.default.config.indenConf.tabSize = config.editor.tabSize\r\n  }\r\n}\r\nexports.updateConfig = updateConfig\r\n//# sourceMappingURL=util.js.map\r\n","'use strict'\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\n// 全局变量\r\nconst VARS = {\r\n  config: {\r\n    // 暂存当前插件的配置项，由 ./util.ts/updateConfig 方法进行更新\r\n    createScssWxmlConf: {\r\n      excuteMode: '',\r\n      scssFilePath: ''\r\n    },\r\n    indenConf: {\r\n      tabSize: 2\r\n    }\r\n  }\r\n}\r\nexports.default = VARS\r\n//# sourceMappingURL=vars.js.map\r\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(669);\n"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","vscode","util_1","vars_1","activate","context","console","log","updateConfig","listener","workspace","onDidChangeConfiguration","default","config","createScssWxmlConf","excuteMode","dispose","excuteWhenSave","subscriptions","push","commands","registerTextEditorCommand","textEditor","activeDocument","document","isDirty","saveRst","extension","createScssWxml","save","window","showInformationMessage","languageId","fileStr","generateProcess","updateScssFile","uri","fsPath","edit","editorBuilder","replace","Range","Position","lineCount","setTimeout","rst","deactivate","parseTemplate_1","scssManage_1","wxmlStr","scssStr","originscssStr","originscssMt","originTemplateStr","originTemplateMt","match","trim","templateObj","scssObj","scssStr2Ast","resetScss","newscssStr","scssAstObj2Str","children","slice","scssWrapper","trimLeft","newwxmlFile","scssMt","trimRight","attrRE","bindAttrValueRE","htmlBlockTagList","voidElementList","selectorTypeInfo","name","tag","transTemplateAst","astObj","type","concat","includes","attrs","class","id","length","map","cAstObj","reduce","t","c","currentObj","selectorNames","forEach","item","attrName","seletorStr","symbol","isBind","arr","mt","split","filter","splitSeletor","voidElement","getSelectorNames","i","childNode","templateStr","html","current","level","byTag","indexOf","isOpen","charAt","parent","key","attrType","res","parseTag","tagName","parse","rnIndent","n","repeat","indenConf","tabSize","completeSelectorName","startsWith","trackChildren","obj","destArr","index","rule","rnInfo","isNew","rootStrObj","JSON","stringify","re1","RegExp","scssCommentRe","root","test","child","isKeyRule","start","end","commentMt","comment","selectorMt","startAfter","distinctArr","childrenArr","len","distinctChildren","childScssObj","childIndex","selector","matchIndex","findIndex","v","hasMatch","scssObjChild","index_1","fs_1","path_1","readScssFile","currentDocumentFilePath","str","readFileSync","scssFilePath","toString","noscssFilePathFn","writeFile","err","activeText","getText","onWillSaveTextDocument","event","editor","activeTextEditor","waitUntil","getConfiguration","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}